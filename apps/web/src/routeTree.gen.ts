/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as CallbackRouteImport } from './routes/callback'
import { Route as TwitchAuthRouteRouteImport } from './routes/_twitchAuth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TwitchAuthRaffleRouteImport } from './routes/_twitchAuth/raffle'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const CallbackRoute = CallbackRouteImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const TwitchAuthRouteRoute = TwitchAuthRouteRouteImport.update({
  id: '/_twitchAuth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TwitchAuthRaffleRoute = TwitchAuthRaffleRouteImport.update({
  id: '/raffle',
  path: '/raffle',
  getParentRoute: () => TwitchAuthRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/callback': typeof CallbackRoute
  '/login': typeof LoginRoute
  '/raffle': typeof TwitchAuthRaffleRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/callback': typeof CallbackRoute
  '/login': typeof LoginRoute
  '/raffle': typeof TwitchAuthRaffleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_twitchAuth': typeof TwitchAuthRouteRouteWithChildren
  '/callback': typeof CallbackRoute
  '/login': typeof LoginRoute
  '/_twitchAuth/raffle': typeof TwitchAuthRaffleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/callback' | '/login' | '/raffle'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/callback' | '/login' | '/raffle'
  id:
    | '__root__'
    | '/'
    | '/_twitchAuth'
    | '/callback'
    | '/login'
    | '/_twitchAuth/raffle'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TwitchAuthRouteRoute: typeof TwitchAuthRouteRouteWithChildren
  CallbackRoute: typeof CallbackRoute
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/callback': {
      id: '/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_twitchAuth': {
      id: '/_twitchAuth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof TwitchAuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_twitchAuth/raffle': {
      id: '/_twitchAuth/raffle'
      path: '/raffle'
      fullPath: '/raffle'
      preLoaderRoute: typeof TwitchAuthRaffleRouteImport
      parentRoute: typeof TwitchAuthRouteRoute
    }
  }
}

interface TwitchAuthRouteRouteChildren {
  TwitchAuthRaffleRoute: typeof TwitchAuthRaffleRoute
}

const TwitchAuthRouteRouteChildren: TwitchAuthRouteRouteChildren = {
  TwitchAuthRaffleRoute: TwitchAuthRaffleRoute,
}

const TwitchAuthRouteRouteWithChildren = TwitchAuthRouteRoute._addFileChildren(
  TwitchAuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TwitchAuthRouteRoute: TwitchAuthRouteRouteWithChildren,
  CallbackRoute: CallbackRoute,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
