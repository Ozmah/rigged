/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as CallbackRouteImport } from './routes/callback'
import { Route as LayoutRouteRouteImport } from './routes/_layout/route'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as LayoutSandboxRouteImport } from './routes/_layout/sandbox'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const CallbackRoute = CallbackRouteImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRouteRoute = LayoutRouteRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutSandboxRoute = LayoutSandboxRouteImport.update({
  id: '/sandbox',
  path: '/sandbox',
  getParentRoute: () => LayoutRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/callback': typeof CallbackRoute
  '/login': typeof LoginRoute
  '/sandbox': typeof LayoutSandboxRoute
  '/': typeof LayoutIndexRoute
}
export interface FileRoutesByTo {
  '/callback': typeof CallbackRoute
  '/login': typeof LoginRoute
  '/sandbox': typeof LayoutSandboxRoute
  '/': typeof LayoutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteRouteWithChildren
  '/callback': typeof CallbackRoute
  '/login': typeof LoginRoute
  '/_layout/sandbox': typeof LayoutSandboxRoute
  '/_layout/': typeof LayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/callback' | '/login' | '/sandbox' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/callback' | '/login' | '/sandbox' | '/'
  id:
    | '__root__'
    | '/_layout'
    | '/callback'
    | '/login'
    | '/_layout/sandbox'
    | '/_layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRouteRoute: typeof LayoutRouteRouteWithChildren
  CallbackRoute: typeof CallbackRoute
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/callback': {
      id: '/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/sandbox': {
      id: '/_layout/sandbox'
      path: '/sandbox'
      fullPath: '/sandbox'
      preLoaderRoute: typeof LayoutSandboxRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
  }
}

interface LayoutRouteRouteChildren {
  LayoutSandboxRoute: typeof LayoutSandboxRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteRouteChildren: LayoutRouteRouteChildren = {
  LayoutSandboxRoute: LayoutSandboxRoute,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteRouteWithChildren = LayoutRouteRoute._addFileChildren(
  LayoutRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  LayoutRouteRoute: LayoutRouteRouteWithChildren,
  CallbackRoute: CallbackRoute,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
